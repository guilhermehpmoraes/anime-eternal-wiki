/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RankUpRouteImport } from './routes/rank-up'
import { Route as GuidesRouteImport } from './routes/guides'
import { Route as IndexRouteImport } from './routes/index'

const RankUpRoute = RankUpRouteImport.update({
  id: '/rank-up',
  path: '/rank-up',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidesRoute = GuidesRouteImport.update({
  id: '/guides',
  path: '/guides',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/guides': typeof GuidesRoute
  '/rank-up': typeof RankUpRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/guides': typeof GuidesRoute
  '/rank-up': typeof RankUpRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/guides': typeof GuidesRoute
  '/rank-up': typeof RankUpRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/guides' | '/rank-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/guides' | '/rank-up'
  id: '__root__' | '/' | '/guides' | '/rank-up'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GuidesRoute: typeof GuidesRoute
  RankUpRoute: typeof RankUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/rank-up': {
      id: '/rank-up'
      path: '/rank-up'
      fullPath: '/rank-up'
      preLoaderRoute: typeof RankUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guides': {
      id: '/guides'
      path: '/guides'
      fullPath: '/guides'
      preLoaderRoute: typeof GuidesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GuidesRoute: GuidesRoute,
  RankUpRoute: RankUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
